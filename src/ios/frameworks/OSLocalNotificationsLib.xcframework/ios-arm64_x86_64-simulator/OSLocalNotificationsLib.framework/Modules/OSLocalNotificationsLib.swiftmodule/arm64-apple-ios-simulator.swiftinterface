// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name OSLocalNotificationsLib
import Foundation
import Swift
import UserNotifications
import _Concurrency
public enum OSLCNOError : Swift.Int, Foundation.CustomNSError, Foundation.LocalizedError {
  case noTitle
  case triggerError
  public var errorDescription: Swift.String? {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public struct OSLCNOFactory {
  public static func createUNWrapper() -> OSLocalNotificationsLib.OSLCNOActionDelegate
}
public typealias OSLCNOSound = Swift.String
public protocol OSLCNOActionDelegate : AnyObject {
  
  #if compiler(>=5.3) && $AsyncAwait
  func triggerNotification(with title: Swift.String, _ body: Swift.String?, _ badge: Swift.Int?, _ sound: OSLocalNotificationsLib.OSLCNOSound?, _ actions: [OSLocalNotificationsLib.OSLCNOAction]?) async throws
  #endif

  
  #if compiler(>=5.3) && $AsyncAwait
  func clearNotificationCategory(with id: Swift.String) async
  #endif

}
public enum OSLCNOActionEvent : Swift.String, Swift.Codable {
  case internalRoute
  case appRoute
  case webRoute
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct OSLCNORouteData : Swift.Codable {
  public init(deepLinkScheme: Swift.String, hostName: Swift.String?, parameterData: [Swift.String : Swift.String]?)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct OSLCNOAction : Swift.Codable {
  public let event: OSLocalNotificationsLib.OSLCNOActionEvent
  public init(identifier: Swift.String, label: Swift.String, textField: OSLocalNotificationsLib.OSLCNOActionTextField?, type: OSLocalNotificationsLib.OSLCNOActionType, event: OSLocalNotificationsLib.OSLCNOActionEvent, routeData: OSLocalNotificationsLib.OSLCNORouteData)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public enum OSLCNOActionType : Swift.String, Swift.Codable {
  case standard
  case destructive
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct OSLCNOActionTextField : Swift.Codable {
  public init(placeholder: Swift.String, inputTextKey: Swift.String)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
extension OSLocalNotificationsLib.OSLCNOError : Swift.Equatable {}
extension OSLocalNotificationsLib.OSLCNOError : Swift.Hashable {}
extension OSLocalNotificationsLib.OSLCNOError : Swift.RawRepresentable {}
extension OSLocalNotificationsLib.OSLCNOActionEvent : Swift.Equatable {}
extension OSLocalNotificationsLib.OSLCNOActionEvent : Swift.Hashable {}
extension OSLocalNotificationsLib.OSLCNOActionEvent : Swift.RawRepresentable {}
extension OSLocalNotificationsLib.OSLCNOActionType : Swift.Equatable {}
extension OSLocalNotificationsLib.OSLCNOActionType : Swift.Hashable {}
extension OSLocalNotificationsLib.OSLCNOActionType : Swift.RawRepresentable {}
